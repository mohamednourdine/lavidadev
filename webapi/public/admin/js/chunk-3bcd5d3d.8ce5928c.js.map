{"version":3,"sources":["webpack:///./src/interfaces/json/display.vue?783c","webpack:///src/interfaces/json/display.vue","webpack:///./src/interfaces/json/display.vue?f41d","webpack:///./src/interfaces/json/display.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","modifiers","right","attrs","staticRenderFns","displayvue_type_script_lang_js_","mixins","interface_default","a","computed","tooltipContents","concat","stringify_default","json_displayvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","module","exports","props","id","type","String","required","default","length","Number","readonly","Boolean","options","newItem","relation","fields","values"],"mappings":"yHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,UAAoBE,WAAA,EAAaC,KAAA,UAAAC,QAAA,kBAAAC,MAAAT,EAAA,gBAAAU,WAAA,kBAAAC,UAAA,CAA6GC,OAAA,KAAcC,MAAA,CAASN,KAAA,WAC9PO,EAAA,6CCMAC,EAAA,CACAC,OAAA,CAAAC,EAAAC,GACAC,SAAA,CACAC,gBADA,WAEA,4DAAAC,OAAAC,IACArB,KAAAQ,MACA,KACA,GAHA,aCXgWc,EAAA,cCOhWC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACAxB,EACAe,GACF,EACA,KACA,KACA,MAIea,EAAA,WAAAH,gCClBfI,EAAAC,QAAA,CACAC,MAAA,CAIAC,GAAA,CACAC,KAAAC,OACAC,UAAA,GAGA3B,KAAA,CACAyB,KAAAC,OACAC,UAAA,GAIAzB,MAAA,CACAuB,KAAA,KACAG,QAAA,MAGAH,KAAA,CACAA,KAAAC,OACAC,UAAA,GAGAE,OAAA,CACAJ,KAAA,CAAAC,OAAAI,QACAF,QAAA,MAGAG,SAAA,CACAN,KAAAO,QACAJ,SAAA,GAGAD,SAAA,CACAF,KAAAO,QACAJ,SAAA,GAGAK,QAAA,CACAR,KAAAP,OACAU,QAAA,UAGAM,QAAA,CACAT,KAAAO,QACAJ,SAAA,GAIAO,SAAA,CACAV,KAAAP,OACAU,QAAA,MAGAQ,OAAA,CACAX,KAAAP,OACAU,QAAA,MAIAS,OAAA,CACAZ,KAAAP,OACAU,QAAA","file":"js/chunk-3bcd5d3d.8ce5928c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-icon',{directives:[{name:\"tooltip\",rawName:\"v-tooltip.right\",value:(_vm.tooltipContents),expression:\"tooltipContents\",modifiers:{\"right\":true}}],attrs:{\"name\":\"code\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-icon name=\"code\" v-tooltip.right=\"tooltipContents\" />\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  mixins: [mixin],\n  computed: {\n    tooltipContents() {\n      return `<pre style=\"font-family: var(--family-monospace);\">${JSON.stringify(\n        this.value,\n        null,\n        4\n      )}</pre>`;\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./display.vue?vue&type=template&id=56b00826&\"\nimport script from \"./display.vue?vue&type=script&lang=js&\"\nexport * from \"./display.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}