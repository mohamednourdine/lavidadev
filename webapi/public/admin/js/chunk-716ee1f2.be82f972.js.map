{"version":3,"sources":["webpack:///./src/interfaces/files/input.vue?2070","webpack:///./src/interfaces/files/input.vue?6db3","webpack:///./src/interfaces/files/get-icon.js","webpack:///src/interfaces/files/input.vue","webpack:///./src/interfaces/files/input.vue?9c90","webpack:///./src/interfaces/files/input.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_2882556f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_2882556f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","file","index","key","id","attrs","title","subtitle","src","icon","href","options","remove","text","$t","edit","on","$event","deleteFile","relatedPrimaryKeyField","field","editFile","_e","type","disabled","readonly","click","newFile","name","_v","_s","existing","to","buttons","done","close","multiple","accept","upload","saveUpload","action-required","placeholder","input","onSearchInput","collection","relation","junction","collection_one","view-type","viewType","selection","filters","view-query","viewQuery","view-options","viewOptions","setViewOptions","query","setViewQuery","select","selectItems","save","color","loading","selectionSaving","editExisting","saveEdits","fields","relatedCollectionFields","values","junctionFieldName","stage-value","stageValue","staticRenderFns","getIcon","startsWith","inputvue_type_script_lang_js_","mixins","interface_default","a","data","viewOptionsOverride","viewTypeOverride","viewQueryOverride","filtersOverride","editThisFile","edits","computed","field_many","junctionPrimaryKey","$lodash","find","collection_many","primary_key","files","_this","value","filter","jr","$delete","map","filename","split","pop","$d","Date","uploaded_on","thumbnails","url","full_url","_this2","Object","objectSpread","concat","toConsumableArray","fileTypeFilters","length","some","operator","trim","methods","fileInfo","$emit","defineProperty","newSelection","_this3","currentValue","currentSelection","relatedPrimaryKeyFieldName","currentSelectionIDs","newSelectionIDs","deletedFileIDs","includes","junctionRowsForDeletedFiles","junctionRows","s","_this4","newValue","junctionRow","_ref3","$set","_this5","val","updates","q","created","debounce","files_inputvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","module","exports","props","String","required","default","Number","Boolean","newItem"],"mappings":"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","file":"js/chunk-716ee1f2.be82f972.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=2882556f&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=2882556f&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-single-file\"},[(_vm.value)?_c('div',{staticClass:\"preview\"},_vm._l((_vm.files),function(file,index){return _c('v-card',{key:file.id,staticClass:\"card\",attrs:{\"title\":file.title,\"subtitle\":file.subtitle,\"src\":file.src,\"icon\":file.icon,\"href\":file.href,\"options\":{\n        remove: {\n          text: _vm.$t('delete'),\n          icon: 'delete'\n        },\n        edit: {\n          text: _vm.$t('interfaces-files-edit_item'),\n          icon: 'edit'\n        }\n      }},on:{\"remove\":function($event){return _vm.deleteFile(file[_vm.relatedPrimaryKeyField.field])},\"edit\":function($event){return _vm.editFile(index)}}})}),1):_vm._e(),_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly},on:{\"click\":function($event){_vm.newFile = true}}},[_c('v-icon',{attrs:{\"name\":\"add\"}}),_vm._v(\"\\n    \"+_vm._s(_vm.$t(\"new_file\"))+\"\\n  \")],1),_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly},on:{\"click\":function($event){_vm.existing = true}}},[_c('v-icon',{attrs:{\"name\":\"playlist_add\"}}),_vm._v(\"\\n    \"+_vm._s(_vm.$t(\"existing\"))+\"\\n  \")],1),(_vm.newFile)?_c('portal',{attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"buttons\":{\n        done: {\n          text: _vm.$t('done')\n        }\n      },\"title\":_vm.$t('file_upload')},on:{\"close\":function($event){_vm.newFile = false},\"done\":function($event){_vm.newFile = false}}},[_c('div',{staticClass:\"body\"},[_c('v-upload',{attrs:{\"multiple\":true,\"accept\":_vm.options.accept},on:{\"upload\":_vm.saveUpload}})],1)])],1):_vm._e(),(_vm.existing)?_c('portal',{attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"title\":_vm.$t('choose_one'),\"buttons\":{\n        done: {\n          text: _vm.$t('done')\n        }\n      },\"action-required\":\"\"},on:{\"close\":function($event){_vm.existing = false},\"done\":function($event){_vm.existing = false}}},[_c('div',{staticClass:\"search\"},[_c('v-input',{staticClass:\"search-input\",attrs:{\"type\":\"search\",\"placeholder\":_vm.$t('search')},on:{\"input\":_vm.onSearchInput}})],1),_c('v-items',{staticClass:\"items\",attrs:{\"collection\":_vm.relation.junction.collection_one.collection,\"view-type\":_vm.viewType,\"selection\":_vm.selection,\"filters\":_vm.filters,\"view-query\":_vm.viewQuery,\"view-options\":_vm.viewOptions},on:{\"options\":_vm.setViewOptions,\"query\":_vm.setViewQuery,\"select\":_vm.selectItems}})],1)],1):_vm._e(),(_vm.editExisting)?_c('portal',{staticClass:\"edit-modal\",attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"title\":_vm.$t('editing_item'),\"buttons\":{\n        save: {\n          text: 'Save',\n          color: 'accent',\n          loading: _vm.selectionSaving\n        }\n      }},on:{\"close\":function($event){_vm.editExisting = false},\"save\":_vm.saveEdits}},[_c('div',{staticClass:\"edit-modal-body\"},[_c('v-form',{attrs:{\"fields\":_vm.relatedCollectionFields,\"values\":_vm.editExisting[_vm.junctionFieldName]},on:{\"stage-value\":_vm.stageValue}})],1)])],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function getIcon(type) {\n  if (type === \"application/pdf\") {\n    return \"picture_as_pdf\";\n  }\n\n  if (type.startsWith(\"application\")) {\n    return \"insert_drive_file\";\n  }\n\n  if (type.startsWith(\"image\")) {\n    return \"crop_original\";\n  }\n\n  if (type.startsWith(\"video\")) {\n    return \"videocam\";\n  }\n\n  if (type.startsWith(\"code\")) {\n    return \"code\";\n  }\n\n  if (type.startsWith(\"audio\")) {\n    return \"audiotrack\";\n  }\n\n  return \"save\";\n}\n","<template>\n  <div class=\"input-single-file\">\n    <div v-if=\"value\" class=\"preview\">\n      <v-card\n        v-for=\"(file, index) in files\"\n        :key=\"file.id\"\n        class=\"card\"\n        :title=\"file.title\"\n        :subtitle=\"file.subtitle\"\n        :src=\"file.src\"\n        :icon=\"file.icon\"\n        :href=\"file.href\"\n        :options=\"{\n          remove: {\n            text: $t('delete'),\n            icon: 'delete'\n          },\n          edit: {\n            text: $t('interfaces-files-edit_item'),\n            icon: 'edit'\n          }\n        }\"\n        @remove=\"deleteFile(file[relatedPrimaryKeyField.field])\"\n        @edit=\"editFile(index)\"\n      ></v-card>\n    </div>\n    <v-button type=\"button\" :disabled=\"readonly\" @click=\"newFile = true\">\n      <v-icon name=\"add\" />\n      {{ $t(\"new_file\") }}\n    </v-button>\n    <!--\n    -->\n    <v-button type=\"button\" :disabled=\"readonly\" @click=\"existing = true\">\n      <v-icon name=\"playlist_add\" />\n      {{ $t(\"existing\") }}\n    </v-button>\n\n    <portal to=\"modal\" v-if=\"newFile\">\n      <v-modal\n        :buttons=\"{\n          done: {\n            text: $t('done')\n          }\n        }\"\n        :title=\"$t('file_upload')\"\n        @close=\"newFile = false\"\n        @done=\"newFile = false\"\n      >\n        <div class=\"body\">\n          <v-upload @upload=\"saveUpload\" :multiple=\"true\" :accept=\"options.accept\"></v-upload>\n        </div>\n      </v-modal>\n    </portal>\n\n    <portal to=\"modal\" v-if=\"existing\">\n      <v-modal\n        :title=\"$t('choose_one')\"\n        :buttons=\"{\n          done: {\n            text: $t('done')\n          }\n        }\"\n        @close=\"existing = false\"\n        @done=\"existing = false\"\n        action-required\n      >\n        <div class=\"search\">\n          <v-input\n            type=\"search\"\n            :placeholder=\"$t('search')\"\n            class=\"search-input\"\n            @input=\"onSearchInput\"\n          />\n        </div>\n\n        <v-items\n          class=\"items\"\n          :collection=\"relation.junction.collection_one.collection\"\n          :view-type=\"viewType\"\n          :selection=\"selection\"\n          :filters=\"filters\"\n          :view-query=\"viewQuery\"\n          :view-options=\"viewOptions\"\n          @options=\"setViewOptions\"\n          @query=\"setViewQuery\"\n          @select=\"selectItems\"\n        ></v-items>\n      </v-modal>\n    </portal>\n\n    <portal to=\"modal\" v-if=\"editExisting\" class=\"edit-modal\">\n      <v-modal\n        :title=\"$t('editing_item')\"\n        :buttons=\"{\n          save: {\n            text: 'Save',\n            color: 'accent',\n            loading: selectionSaving\n          }\n        }\"\n        @close=\"editExisting = false\"\n        @save=\"saveEdits\"\n      >\n        <div class=\"edit-modal-body\">\n          <v-form\n            :fields=\"relatedCollectionFields\"\n            :values=\"editExisting[junctionFieldName]\"\n            @stage-value=\"stageValue\"\n          ></v-form>\n        </div>\n      </v-modal>\n    </portal>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport getIcon from \"./get-icon\";\n\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      newFile: false,\n      existing: false,\n      editExisting: false,\n      selectionSaving: false,\n\n      viewOptionsOverride: {},\n      viewTypeOverride: null,\n      viewQueryOverride: {},\n      filtersOverride: [],\n      editThisFile: {},\n      edits: {}\n    };\n  },\n  computed: {\n    /*\n     * This interface is using a many to many relationship. In order to retrieve\n     * and save (to the junction table) we need to know in what key to store\n     * the (new / edited) file\n     */\n    junctionFieldName() {\n      return this.relation.junction.field_many.field;\n    },\n\n    relatedCollectionFields() {\n      return this.relation.junction.collection_one.fields;\n    },\n\n    junctionPrimaryKey() {\n      return this.$lodash.find(this.relation.collection_many.fields, {\n        primary_key: true\n      }).field;\n    },\n\n    /*\n     * Converts the junction collection rows into formatted file objects that\n     * can be used to render the card previews.\n     *\n     * Also, filter out the values that are marked for deletion\n     */\n    files() {\n      if (!this.value) return [];\n\n      return this.value\n        .filter(jr => !jr.$delete)\n        .map(relation => {\n          const file = relation[this.junctionFieldName];\n          return {\n            id: file[this.relatedPrimaryKeyField.field],\n            title: file.title,\n            subtitle:\n              file.filename.split(\".\").pop() + \" • \" + this.$d(new Date(file.uploaded_on), \"short\"),\n            src: file.type && file.type.startsWith(\"image\") ? file.data.thumbnails[0].url : null,\n            icon: file.type && !file.type.startsWith(\"image\") ? getIcon(file.type) : null,\n            href: file.type && file.type === \"application/pdf\" ? file.data.full_url : null\n          };\n        });\n    },\n\n    /*\n     * The primary key of the related collection. Most likely going to be `id` in\n     * directus_files, but seeing that the user can theoretically change this,\n     * we need to make sure we use the value dynamically\n     */\n    relatedPrimaryKeyField() {\n      return this.$lodash.find(this.relation.junction.collection_one.fields, {\n        primary_key: true\n      });\n    },\n\n    /*\n     * The value of the interface is an array of rows from the junction table. The\n     * listing view expects the actual items that are selected, so we have to return\n     * just those. Also, we need to filter out the items that are already marked\n     * for deletion from the selection, otherwise the listing view doesn't know\n     * the user already de-selected it\n     */\n    selection() {\n      if (!this.value) return [];\n\n      return this.value.filter(jr => !jr.$delete).map(jr => jr[this.junctionFieldName]);\n    },\n\n    viewOptions() {\n      const viewOptions = this.options.viewOptions;\n      return {\n        ...viewOptions,\n        ...this.viewOptionsOverride\n      };\n    },\n\n    viewType() {\n      if (this.viewTypeOverride) return this.viewTypeOverride;\n      return this.options.viewType;\n    },\n\n    viewQuery() {\n      const viewQuery = this.options.viewQuery;\n      return {\n        ...viewQuery,\n        ...this.viewQueryOverride\n      };\n    },\n\n    filters() {\n      return [...this.options.filters, ...this.fileTypeFilters, ...this.filtersOverride];\n    },\n\n    fileTypeFilters() {\n      if (\n        !this.options.accept ||\n        this.filtersOverride.length > 0 ||\n        this.options.filters.some(filter => filter.field === \"type\")\n      ) {\n        return [];\n      }\n\n      return [\n        {\n          field: \"type\",\n          operator: \"in\",\n          value: this.options.accept.trim().split(/,\\s*/)\n        }\n      ];\n    }\n  },\n  methods: {\n    /*\n     * The values are being stored in the junction table. In order to add a new\n     * file, we need to save the new file's info inside the junction row under\n     * the correct key\n     */\n    saveUpload(fileInfo) {\n      this.$emit(\"input\", [\n        ...this.value,\n        {\n          [this.junctionFieldName]: fileInfo.data\n        }\n      ]);\n    },\n\n    /*\n     * Selecting items is a little bit more involved. If the user selects a file\n     * that wasn't selected before, we need to add it into the junction record\n     * nested under the correct field key name (which is accessible in\n     * junctionFieldName). If the user de-selects an item, instead of removing\n     * the row from the value, we need to add the $delete flag to the item. That\n     * way, Directus knows to delete the value\n     */\n    selectItems(newSelection) {\n      // this.value is an array of the junction collection rows\n      const currentValue = this.value || [];\n      const currentSelection = currentValue.map(jr => jr[this.junctionFieldName]);\n\n      const relatedPrimaryKeyFieldName = this.relatedPrimaryKeyField.field;\n\n      const currentSelectionIDs = currentSelection.map(file => file[relatedPrimaryKeyFieldName]);\n      const newSelectionIDs = newSelection.map(file => file[relatedPrimaryKeyFieldName]);\n\n      // We need to merge both the selections where the current selected files\n      // that aren't selected anymore get the $delete flag. Files that are selected\n      // that weren't selected before need to be added as file object.\n      const deletedFileIDs = currentSelectionIDs.filter(\n        id => newSelectionIDs.includes(id) === false\n      );\n\n      const junctionRowsForDeletedFiles = currentValue\n        .filter(jr =>\n          deletedFileIDs.includes(jr[this.junctionFieldName][relatedPrimaryKeyFieldName])\n        )\n        .map(jr => ({\n          ...jr,\n          $delete: true\n        }));\n\n      // Finally, we have to convert the array of selected items into an array\n      // of junction table records\n      const junctionRows = newSelection.map(s => {\n        return {\n          [this.junctionFieldName]: s\n        };\n      });\n\n      this.$emit(\"input\", [...junctionRowsForDeletedFiles, ...junctionRows]);\n    },\n\n    /*\n     * Fired when the user clicks the delete icon in the card preview of a file\n     * Should add the delete flag to the junction row\n     */\n    deleteFile(id) {\n      const newValue = this.value.map(junctionRow => {\n        const file = junctionRow[this.junctionFieldName];\n\n        if (file[this.relatedPrimaryKeyField.field] === id) {\n          return {\n            ...junctionRow,\n            $delete: true\n          };\n        }\n\n        return junctionRow;\n      });\n\n      this.$emit(\"input\", newValue);\n    },\n\n    editFile(index) {\n      this.editExisting = this.value[index];\n    },\n\n    stageValue({ field, value }) {\n      this.$set(this.edits, field, value);\n    },\n\n    saveEdits() {\n      this.$emit(\"input\", [\n        ...(this.value || [] || []).map(val => {\n          if (val.id === this.editExisting[this.junctionPrimaryKey]) {\n            return {\n              ...val,\n              [this.junctionFieldName]: {\n                ...val[this.junctionFieldName],\n                ...this.edits\n              }\n            };\n          }\n          return val;\n        })\n      ]);\n\n      this.edits = {};\n      this.editExisting = false;\n    },\n\n    setViewOptions(updates) {\n      this.viewOptionsOverride = {\n        ...this.viewOptionsOverride,\n        ...updates\n      };\n    },\n\n    setViewQuery(updates) {\n      this.viewQueryOverride = {\n        ...this.viewQueryOverride,\n        ...updates\n      };\n    },\n    onSearchInput(value) {\n      this.setViewQuery({\n        q: value\n      });\n    }\n  },\n  created() {\n    this.onSearchInput = this.$lodash.debounce(this.onSearchInput, 200);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.preview {\n  display: flex;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n\n  .card {\n    margin-right: 20px;\n    margin-bottom: 20px;\n  }\n}\n\nbutton {\n  display: inline-block;\n  margin-left: 20px;\n  &:first-of-type {\n    margin-left: 0;\n  }\n}\n\n.body {\n  padding: 20px;\n}\n\n.edit-modal-body {\n  padding: 20px;\n  background-color: var(--body-background);\n}\n\n.search-input {\n  border-bottom: 1px solid var(--lightest-gray);\n  & >>> input {\n    border-radius: 0;\n    border: none;\n    padding-left: var(--page-padding);\n    height: var(--header-height);\n\n    &::placeholder {\n      color: var(--light-gray);\n    }\n  }\n}\n\n.items {\n  height: calc(100% - var(--header-height) - 1px);\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=2882556f&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=2882556f&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2882556f\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n"],"sourceRoot":""}