{"version":3,"sources":["webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js","webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///./src/interfaces/file-preview/input.vue?a092","webpack:///./src/interfaces/file-preview/input.vue?10a6","webpack:///src/interfaces/file-preview/input.vue","webpack:///./src/interfaces/file-preview/input.vue?7fb0","webpack:///./src/interfaces/file-preview/input.vue","webpack:///./src/interfaces/file-preview/input.vue?940d"],"names":["module","exports","props","id","type","String","required","name","value","default","length","Number","readonly","Boolean","options","Object","newItem","relation","fields","values","global","factory","this","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","i","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","IS_BROWSER","window","WINDOW","IS_TOUCH_DEVICE","document","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","forEach","callback","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","get","set","addEventListener","removeEventListener","removeListener","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","xhr","XMLHttpRequest","clone","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_1_lang_scss___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_1_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_vm","_h","$createElement","_c","_self","staticClass","imgError","_e","attrs","vUrl","on","$event","controls","_v","embed","frameborder","allow","allowfullscreen","webkitallowfullscreen","mozallowfullscreen","_s","fileType","editMode","href","isImage","edit","includes","title","click","initImageEdit","cropRatioOptions","cropRatio","directives","rawName","expression","$$selectedVal","filter","o","selected","val","_value","$set","multiple","_l","option","domProps","cancelImageEdit","saveImage","flipImage","rotateImage","staticRenderFns","inputvue_type_script_lang_js_","mixins","interface_default","version","free","original","1:1","16:9","4:3","3:2","initOptions","watch","image.cropRatio","newValue","computed","isVideo","isAudio","isYouTube","isVimeo","full_url","show","getElementById","cropper_default","objectSpread","escapeEditImage","isSaving","$helpers","shortid","generate","$store","dispatch","imageBase64","$api","patch","then","$events","emit","notify","catch","err","Image","file_preview_inputvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_ec03e1fa_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_ec03e1fa_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-26a84431.73d3ee76.js","sourcesContent":["module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n","/*!\n * Cropper.js v1.5.1\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-03-10T09:55:53.729Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Read ArrayBuffer from Data URL of JPEG images directly for better performance.\n\n\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /^(?:.(?!chrome|android))*safari/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=1&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=1&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isImage)?_c('div',{staticClass:\"image\"},[(!_vm.imgError)?_c('img',{attrs:{\"id\":\"image\",\"src\":_vm.vUrl},on:{\"error\":function($event){_vm.imgError = true}}}):_vm._e(),(_vm.imgError)?_c('div',{staticClass:\"broken-image\"},[_c('v-icon',{attrs:{\"name\":\"broken_image\"}})],1):_vm._e()]):(_vm.isVideo)?_c('div',{staticClass:\"video\"},[_c('video',{attrs:{\"controls\":\"\"}},[_c('source',{attrs:{\"src\":_vm.url,\"type\":_vm.values.type}}),_vm._v(\"\\n      I'm sorry; your browser doesn't support HTML5 video in this format.\\n    \")])]):(_vm.isAudio)?_c('div',{staticClass:\"audio\"},[_c('audio',{attrs:{\"controls\":\"\"}},[_c('source',{attrs:{\"src\":_vm.url,\"type\":_vm.values.type}}),_vm._v(\"\\n      I'm sorry; your browser doesn't support HTML5 audio in this format.\\n    \")])]):(_vm.isYouTube)?_c('div',{staticClass:\"embed\"},[_c('iframe',{attrs:{\"width\":\"620\",\"height\":\"349\",\"src\":'https://www.youtube.com/embed/' + _vm.values.embed,\"frameborder\":\"0\",\"allow\":\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\"allowfullscreen\":\"\"}})]):(_vm.isVimeo)?_c('div',{staticClass:\"embed\"},[_c('iframe',{attrs:{\"width\":\"620\",\"height\":\"349\",\"src\":'https://player.vimeo.com/video/' +\n          _vm.values.embed +\n          '?color=039be5&title=0&byline=0&portrait=0',\"frameborder\":\"0\",\"webkitallowfullscreen\":\"\",\"mozallowfullscreen\":\"\",\"allowfullscreen\":\"\"}})]):_c('div',{staticClass:\"file\"},[_vm._v(_vm._s(_vm.fileType))]),_c('div',{staticClass:\"toolbar\"},[(!_vm.editMode)?_c('div',{staticClass:\"original\"},[_c('a',{staticClass:\"file-link\",attrs:{\"href\":_vm.url,\"target\":\"_blank\"}},[_c('v-icon',{attrs:{\"name\":\"link\"}}),_vm._v(\"\\n        \"+_vm._s(_vm.url)+\"\\n      \")],1),(_vm.isImage && _vm.options.edit.includes('image_editor'))?_c('button',{staticClass:\"image-edit-start\",attrs:{\"type\":\"button\",\"title\":\"Edit image\"},on:{\"click\":function($event){return _vm.initImageEdit()}}},[_c('v-icon',{attrs:{\"name\":\"crop_rotate\"}})],1):_vm._e()]):_vm._e(),(_vm.editMode)?_c('ul',{staticClass:\"image-edit\"},[_c('li',[_c('div',{staticClass:\"image-aspect-ratio\"},[_c('v-icon',{attrs:{\"name\":\"image_aspect_ratio\"}}),_c('span',[_vm._v(_vm._s(_vm.image.cropRatioOptions[_vm.image.cropRatio]))]),_c('v-icon',{attrs:{\"name\":\"arrow_drop_down\"}}),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.image.cropRatio),expression:\"image.cropRatio\"}],attrs:{\"title\":\"Select aspect ratio\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.image, \"cropRatio\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.image.cropRatioOptions),function(option,value){return _c('option',{key:value,domProps:{\"value\":value}},[_vm._v(\"\\n              \"+_vm._s(option)+\"\\n            \")])}),0)],1)]),_c('li',[_c('button',{attrs:{\"type\":\"button\",\"title\":\"Discard changes\"},on:{\"click\":function($event){return _vm.cancelImageEdit()}}},[_c('v-icon',{attrs:{\"name\":\"not_interested\"}})],1),_c('button',{attrs:{\"type\":\"button\",\"title\":\"Save changes\"},on:{\"click\":function($event){return _vm.saveImage()}}},[_c('v-icon',{attrs:{\"name\":\"check_circle\"}})],1)]),_c('li',[_c('button',{attrs:{\"type\":\"button\",\"title\":\"Flip horizontally\"},on:{\"click\":function($event){return _vm.flipImage()}}},[_c('v-icon',{attrs:{\"name\":\"flip\"}})],1),_c('button',{attrs:{\"type\":\"button\",\"title\":\"Rotate counter-clockwise\"},on:{\"click\":function($event){return _vm.rotateImage()}}},[_c('v-icon',{attrs:{\"name\":\"rotate_90_degrees_ccw\"}})],1)])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div v-if=\"isImage\" class=\"image\">\n      <img id=\"image\" :src=\"vUrl\" @error=\"imgError = true\" v-if=\"!imgError\" />\n      <div class=\"broken-image\" v-if=\"imgError\">\n        <v-icon name=\"broken_image\" />\n      </div>\n    </div>\n\n    <div v-else-if=\"isVideo\" class=\"video\">\n      <video controls>\n        <source :src=\"url\" :type=\"values.type\" />\n        I'm sorry; your browser doesn't support HTML5 video in this format.\n      </video>\n    </div>\n    <div v-else-if=\"isAudio\" class=\"audio\">\n      <audio controls>\n        <source :src=\"url\" :type=\"values.type\" />\n        I'm sorry; your browser doesn't support HTML5 audio in this format.\n      </audio>\n    </div>\n    <div v-else-if=\"isYouTube\" class=\"embed\">\n      <iframe\n        width=\"620\"\n        height=\"349\"\n        :src=\"'https://www.youtube.com/embed/' + values.embed\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n    </div>\n    <div v-else-if=\"isVimeo\" class=\"embed\">\n      <iframe\n        width=\"620\"\n        height=\"349\"\n        :src=\"\n          'https://player.vimeo.com/video/' +\n            values.embed +\n            '?color=039be5&title=0&byline=0&portrait=0'\n        \"\n        frameborder=\"0\"\n        webkitallowfullscreen\n        mozallowfullscreen\n        allowfullscreen\n      ></iframe>\n    </div>\n    <div v-else class=\"file\">{{ fileType }}</div>\n    <div class=\"toolbar\">\n      <!-- Default Toolbar -->\n      <div v-if=\"!editMode\" class=\"original\">\n        <a class=\"file-link\" :href=\"url\" target=\"_blank\">\n          <v-icon name=\"link\" />\n          {{ url }}\n        </a>\n        <button\n          v-if=\"isImage && options.edit.includes('image_editor')\"\n          type=\"button\"\n          title=\"Edit image\"\n          class=\"image-edit-start\"\n          @click=\"initImageEdit()\"\n        >\n          <v-icon name=\"crop_rotate\" />\n        </button>\n      </div>\n\n      <!-- Image Edit Toolbar -->\n      <ul v-if=\"editMode\" class=\"image-edit\">\n        <li>\n          <div class=\"image-aspect-ratio\">\n            <v-icon name=\"image_aspect_ratio\" />\n            <span>{{ image.cropRatioOptions[image.cropRatio] }}</span>\n            <v-icon name=\"arrow_drop_down\" />\n            <select v-model=\"image.cropRatio\" title=\"Select aspect ratio\">\n              <option v-for=\"(option, value) in image.cropRatioOptions\" :key=\"value\" :value=\"value\">\n                {{ option }}\n              </option>\n            </select>\n          </div>\n        </li>\n        <li>\n          <button type=\"button\" title=\"Discard changes\" @click=\"cancelImageEdit()\">\n            <v-icon name=\"not_interested\" />\n          </button>\n          <button type=\"button\" title=\"Save changes\" @click=\"saveImage()\">\n            <v-icon name=\"check_circle\" />\n          </button>\n        </li>\n        <li>\n          <button type=\"button\" title=\"Flip horizontally\" @click=\"flipImage()\">\n            <v-icon name=\"flip\" />\n          </button>\n          <button type=\"button\" title=\"Rotate counter-clockwise\" @click=\"rotateImage()\">\n            <v-icon name=\"rotate_90_degrees_ccw\" />\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.min.css\";\n\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      editMode: null,\n      imgError: false,\n      image: {\n        version: 0, //To prevent the cacheing issue of image\n        cropper: null, //cropper instance\n        cropRatio: \"free\", // Aspect ratio set by cropper\n        cropRatioOptions: {\n          free: \"Free\",\n          original: \"Original\",\n          \"1:1\": \"Square\",\n          \"16:9\": \"16:9\",\n          \"4:3\": \"4:3\",\n          \"3:2\": \"3:2\"\n        },\n        initOptions: {\n          background: false,\n          viewMode: 0,\n          autoCropArea: 1,\n          zoomable: false\n        }\n      }\n    };\n  },\n  watch: {\n    \"image.cropRatio\"(newValue) {\n      this.setAspectRatio(newValue);\n    }\n  },\n  computed: {\n    isImage() {\n      switch (this.values.type) {\n        case \"image/jpeg\":\n        case \"image/gif\":\n        case \"image/png\":\n        case \"image/svg+xml\":\n        case \"image/webp\":\n        case \"image/bmp\":\n          return true;\n      }\n      return false;\n    },\n    isVideo() {\n      switch (this.values.type) {\n        case \"video/mp4\":\n        case \"video/webm\":\n        case \"video/ogg\":\n          return true;\n      }\n      return false;\n    },\n    isAudio() {\n      switch (this.values.type) {\n        case \"audio/mpeg\":\n        case \"audio/ogg\":\n        case \"audio/wav\":\n          return true;\n      }\n      return false;\n    },\n    isYouTube() {\n      return this.values.type === \"embed/youtube\";\n    },\n    isVimeo() {\n      return this.values.type === \"embed/vimeo\";\n    },\n    fileType() {\n      return this.values.type.split(\"/\")[1];\n    },\n    url() {\n      return this.values.data.full_url;\n    },\n    vUrl() {\n      /**\n       * Timestamp fetches the latest image from server\n       * Version helps to refresh the image after crop\n       */\n      return `${this.values.data.full_url}?v=${\n        this.image.version\n      }&timestamp=${new Date().getTime()}`;\n    }\n  },\n  methods: {\n    initImageEdit() {\n      this.editMode = \"image\";\n      this.image.show = false;\n      const image = document.getElementById(\"image\");\n      this.image.cropper = new Cropper(image, {\n        ...this.image.initOptions\n      });\n\n      window.addEventListener(\"keydown\", this.escapeEditImage);\n    },\n\n    escapeEditImage(event) {\n      if (this.editMode == \"image\" && event.key == \"Escape\") {\n        this.cancelImageEdit();\n        window.removeEventListener(\"keydown\", this.escapeEditImage);\n      }\n    },\n\n    cancelImageEdit() {\n      this.editMode = null;\n      this.image.cropRatio = \"free\";\n      this.image.cropper.destroy();\n    },\n\n    setAspectRatio(value) {\n      let aspectRatio;\n      switch (value) {\n        case \"free\": {\n          aspectRatio = \"free\";\n          break;\n        }\n        case \"original\": {\n          aspectRatio = this.image.cropper.getImageData().aspectRatio;\n          break;\n        }\n        default: {\n          const values = value.split(\":\");\n          aspectRatio = values[0] / values[1];\n          break;\n        }\n      }\n      this.image.cropper.setAspectRatio(aspectRatio);\n    },\n\n    flipImage() {\n      this.image.cropper.scale(-this.image.cropper.getData().scaleX, 1);\n    },\n\n    rotateImage() {\n      this.image.cropper.rotate(-90);\n      //TODO: Fix the image rotation issue\n      /**\n       * White rotating the image, the sides are getting cut of\n       * due to limitations of the cropper.js plugin\n       */\n    },\n\n    saveImage() {\n      //Running the rabbit\n      const isSaving = this.$helpers.shortid.generate();\n      this.$store.dispatch(\"loadingStart\", {\n        id: isSaving\n      });\n\n      //Converting an image to base64\n      const imageBase64 = this.image.cropper\n        .getCroppedCanvas({\n          imageSmoothingQuality: \"high\"\n        })\n        .toDataURL(this.values.type);\n\n      //Saving the image via API\n      this.$api\n        .patch(`/files/${this.values.id}`, {\n          data: imageBase64\n        })\n        .then(() => {\n          this.$events.emit(\"success\", {\n            notify: \"Image updated.\"\n          });\n        })\n        .catch(err => {\n          this.$events.emit(\"error\", {\n            notify: \"There was an error while saving the image\",\n            error: err\n          });\n        })\n        .then(() => {\n          this.image.version++;\n          /**\n           * This will wait for new cropped image to load from server\n           * & then destroy the cropper instance\n           * This prevents flickering between old and new image\n           */\n          const img = new Image();\n          img.src = this.vUrl;\n          img.onload = () => {\n            this.$store.dispatch(\"loadingFinished\", isSaving);\n            this.cancelImageEdit();\n          };\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.file,\n.audio,\n.video,\n.image {\n  width: 100%;\n  background-color: var(--darker-gray);\n  text-align: center;\n  border-radius: var(--border-radius);\n  overflow: hidden;\n  img {\n    margin: 0 auto;\n    max-height: 414px;\n    max-width: 100%;\n    display: block;\n  }\n  video {\n    margin: 0 auto;\n    max-height: 414px;\n    max-width: 100%;\n    display: block;\n  }\n  audio {\n    margin: 0 auto;\n    width: 100%;\n    max-width: 100%;\n    display: block;\n  }\n}\n.audio,\n.file {\n  padding: 80px 40px;\n  font-size: 3em;\n  text-transform: uppercase;\n  font-weight: 300;\n  color: var(--lighter-gray);\n}\n.toolbar {\n  margin-top: 10px;\n  .original {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n  }\n}\n.file-link {\n  transition: var(--fast) var(--transition);\n  text-decoration: none;\n  color: var(--gray);\n  &:hover {\n    color: var(--darker-gray);\n  }\n  i {\n    margin-right: 6px;\n    color: var(--gray);\n  }\n  span {\n    margin-right: 10px;\n    vertical-align: middle;\n  }\n}\n.image-edit-start {\n  margin-left: 10px;\n  i {\n    color: var(--gray);\n  }\n}\n\n.image-edit {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  > li {\n    flex: 0 0 33.33%;\n    text-align: center;\n    button {\n      color: var(--dark-gray);\n      + button {\n        margin-left: 10px;\n      }\n      &:hover {\n        color: var(--darkest-gray);\n      }\n    }\n    &:first-child {\n      text-align: left;\n    }\n    &:last-child {\n      text-align: right;\n    }\n  }\n}\n\n.image-aspect-ratio {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  span {\n    margin-left: 8px;\n  }\n  select {\n    cursor: pointer;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.image {\n  .cropper-point {\n    background: #fff;\n    height: 10px;\n    width: 10px;\n    border-radius: 50%;\n    opacity: 1;\n    &.point-n {\n      top: -5px;\n      margin-left: -5px;\n    }\n    &.point-ne {\n      right: -5px;\n      top: -5px;\n    }\n    &.point-e {\n      margin-top: -5px;\n      right: -5px;\n    }\n    &.point-se {\n      right: -5px;\n      bottom: -5px;\n    }\n    &.point-s {\n      bottom: -5px;\n      margin-left: -5px;\n    }\n    &.point-sw {\n      left: -5px;\n      bottom: -5px;\n    }\n    &.point-w {\n      margin-top: -5px;\n      left: -5px;\n    }\n    &.point-nw {\n      left: -5px;\n      top: -5px;\n    }\n  }\n  .cropper-dashed {\n    border-style: solid;\n    border-color: #fff;\n    opacity: 0.4;\n    box-shadow: 0 0px 0px 1px rgba(0, 0, 0, 0.3);\n  }\n  .cropper-line {\n    background-color: #000;\n    opacity: 0.05;\n  }\n}\n.broken-image {\n  width: 100%;\n  padding: 70px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  i {\n    color: var(--light-gray);\n    font-size: 48px;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=ec03e1fa&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=ec03e1fa&lang=scss&scoped=true&\"\nimport style1 from \"./input.vue?vue&type=style&index=1&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ec03e1fa\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=ec03e1fa&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=ec03e1fa&lang=scss&scoped=true&\""],"sourceRoot":""}